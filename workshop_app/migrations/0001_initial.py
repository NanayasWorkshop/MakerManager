# Generated by Django 5.2 on 2025-05-07 09:25

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_id', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('individual', 'Individual'), ('company', 'Company'), ('nonprofit', 'Non-Profit'), ('education', 'Educational'), ('other', 'Other')], max_length=10)),
                ('industry', models.CharField(max_length=100)),
                ('reference_source', models.CharField(max_length=100)),
                ('notes', models.TextField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('prospect', 'Prospect')], max_length=10)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('primary_email', models.EmailField(max_length=254)),
                ('secondary_email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=20)),
                ('mobile_number', models.CharField(max_length=20)),
                ('website', models.URLField()),
                ('social_media', models.TextField()),
                ('street_address', models.CharField(max_length=100)),
                ('address_line_2', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('state_province', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=100)),
                ('tax_id', models.CharField(max_length=50)),
                ('payment_terms', models.CharField(max_length=50)),
                ('currency', models.CharField(max_length=10)),
                ('discount_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('credit_limit', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('account_status', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='JobStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField()),
                ('color_code', models.CharField(max_length=7)),
                ('order', models.IntegerField()),
            ],
            options={
                'verbose_name_plural': 'Job Statuses',
            },
        ),
        migrations.CreateModel(
            name='MachineType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='MaterialCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=5, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Material Categories',
            },
        ),
        migrations.CreateModel(
            name='ContactPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
                ('primary_contact', models.BooleanField(default=False)),
                ('notes', models.TextField()),
                ('direct_email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('mobile', models.CharField(max_length=20)),
                ('communication_preference', models.CharField(max_length=20)),
                ('working_hours', models.CharField(max_length=100)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workshop_app.client')),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_id', models.CharField(max_length=15, unique=True)),
                ('project_name', models.CharField(max_length=100)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('deadline', models.DateField(blank=True, null=True)),
                ('description', models.TextField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('expected_completion', models.DateField(blank=True, null=True)),
                ('is_general', models.BooleanField(default=False)),
                ('is_personal', models.BooleanField(default=False)),
                ('percent_complete', models.IntegerField(default=0)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], max_length=10)),
                ('qr_code', models.CharField(max_length=100)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workshop_app.client')),
                ('contact_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workshop_app.contactperson')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_jobs', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_jobs', to=settings.AUTH_USER_MODEL)),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workshop_app.jobstatus')),
            ],
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machine_id', models.CharField(max_length=15, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('manufacturer', models.CharField(max_length=100)),
                ('model_number', models.CharField(max_length=100)),
                ('serial_number', models.CharField(max_length=100)),
                ('location_in_workshop', models.CharField(max_length=100)),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('supplier', models.CharField(max_length=100)),
                ('warranty_end_date', models.DateField(blank=True, null=True)),
                ('working_area', models.CharField(max_length=100)),
                ('power_requirements', models.CharField(max_length=100)),
                ('maximum_work_speed', models.CharField(max_length=50)),
                ('precision', models.CharField(max_length=50)),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('setup_time', models.IntegerField(blank=True, null=True)),
                ('setup_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cleanup_time', models.IntegerField(blank=True, null=True)),
                ('cleanup_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('status', models.CharField(choices=[('available', 'Available'), ('in_use', 'In Use'), ('maintenance', 'Maintenance'), ('out_of_order', 'Out of Order')], max_length=20)),
                ('reserved_until', models.DateTimeField(blank=True, null=True)),
                ('qr_code', models.CharField(max_length=100)),
                ('notes', models.TextField()),
                ('current_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_machines', to='workshop_app.job')),
                ('machine_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workshop_app.machinetype')),
            ],
        ),
        migrations.CreateModel(
            name='MaterialType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workshop_app.materialcategory')),
            ],
            options={
                'unique_together': {('category', 'code')},
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_id', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('color', models.CharField(max_length=50)),
                ('dimensions', models.CharField(max_length=100)),
                ('unit_of_measurement', models.CharField(max_length=20)),
                ('supplier_name', models.CharField(max_length=100)),
                ('brand_name', models.CharField(max_length=100)),
                ('current_stock', models.DecimalField(decimal_places=2, max_digits=10)),
                ('minimum_stock_level', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('minimum_stock_alert', models.BooleanField(default=False)),
                ('location_in_workshop', models.CharField(max_length=100)),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('price_per_unit', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('project_association', models.CharField(max_length=100)),
                ('notes', models.TextField()),
                ('qr_code', models.CharField(max_length=100)),
                ('serial_number', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('supplier_sku', models.CharField(max_length=50)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('material_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workshop_app.materialtype')),
            ],
        ),
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operator_id', models.CharField(max_length=15, unique=True)),
                ('specialization', models.CharField(max_length=100)),
                ('skill_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], max_length=20)),
                ('hourly_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('special_skills', models.TextField()),
                ('productivity_factor', models.DecimalField(decimal_places=2, max_digits=10)),
                ('certified_machines', models.ManyToManyField(related_name='certified_operators', to='workshop_app.machine')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StaffSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active_since', models.DateTimeField(blank=True, null=True)),
                ('show_active_job_banner', models.BooleanField(default=True)),
                ('default_scan_for', models.CharField(choices=[('job', 'Job'), ('material', 'Material'), ('machine', 'Machine')], default='job', max_length=10)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('active_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='active_users', to='workshop_app.job')),
                ('personal_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='personal_users', to='workshop_app.job')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
